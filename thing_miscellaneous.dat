<?xml version="1.0" encoding="UTF-8"?>

<!-- This file contains the assortment of miscellaneous things that are required for
      the game system. Miscellaneous things include the mechanisms for managing applied
      damage, user images, and personal info for each actor. It also includes things
      used to track resource pools, such as those used for managing the available
      attribute points, skill points, etc.
-->

<document signature="Hero Lab Data">

  <!-- Damage transaction handler for use when applying damage on the In-Play tab -->
  <thing
    id="mscDamage"
    name="Damage"
    compset="Damage">

    <!-- Automatically add the damage transaction to every actor -->
    <tag group="Helper" tag="Bootstrap"/>
    </thing>


  <!-- Personal information details used on the Personal tab -->
  <thing
    id="mscPerson"
    name="Personal"
    compset="Personal">
    </thing>

  <!-- Basic user-added image that is managed through the gallery on Personal tab -->
  <thing
    id="mscUserImg"
    name="User Image"
    compset="UserImage">
    </thing>
  
  <!-- RiPPs - Role-Play Points. Every player starts with 3 and can have a maximum of 5. -->
  <thing
    id="resRiPPs"
    name="Role-Play Points"
    compset="Resource">
    <fieldval field="resObject" value="Skill"/>
    <fieldval field="resMax" value="5"/>
    <fieldval field="resDefault" value="3"/>
    <tag group="Helper" tag="Bootstrap"/>
    <tag group="Helper" tag="NoMinimum"/>
  </thing>  
  
  <thing
    id="trkRiPPs"
    name="RiPPs"
    compset="RiPPs">
    <fieldval field="trkMin" value="0"/>
    <fieldval field="trkMax" value="5"/>
    <tag group="Helper" tag="Bootstrap"/>
    <tag group="Helper" tag="ResetMax"/>
    <!--tag group="Helper" tag="NoMaxBound"/-->
    </thing> 
  
  <thing
    id="fRPlusSk"
    name="Skill Bonus"
    compset="cmpsetSB"
    description="Gives a bonus to the selected skill.">
    <fieldval field="usrCandid1" value="component.Skill"/>
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="PreTraits" priority="4900">
      <before name="Calc trtFinal"/><![CDATA[
      var bonus as number
      var penalty as number
      bonus = tagvalue[Bonus.?]
      penalty = tagvalue[Penalty.?]
      if (bonus = 0) then
        if (penalty = 0) then
          bonus = 2
        else
          bonus = penalty
        endif
      endif
      
      if (bonus > 0) then
        field[livename].text = "+" & bonus & " " & livename
      else
        field[livename].text = bonus & " " & livename
      endif
      
      ~build the candidate expression out of our Skill and Skills tags
      var skills as string
      skills = tagids[Skill.?, " | "]
      var skilltypes as string
      skilltypes = tagids[Skills.?, " | "]

      var combined as string
      if (tagis[Skills.?] <> 0) then
        if (tagis[Skill.?] <> 0) then
          combined = skills & " | " & skilltypes
        else
          combined = skilltypes
        endif
      else
        combined = skills
      endif
      
      ~ debug combined & ", " & empty(combined)
      if (empty(combined) = 0) then
        field[usrCandid1].text &= " & (" & combined & ")"
      endif
        
      perform field[usrChosen1].chosen.field[trtBG].modify[+,bonus,"Background"]
      ]]></eval>
    </thing>
        
  <thing
    id="fRPlusSp"
    name="Bonus Specialty"
    compset="cmpsetSB"
    description="Adds the selected specialty.">
    <fieldval field="usrCandid2" value="component.Specialty"/>
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="PreTraits" priority="4900">
      <before name="Calc trtFinal"/><![CDATA[
      ~build the candidate expression out of our specialty tags
      var specs as string
      specs = tagids[Specialty.?, " | "]
      var skills as string
      skills = tagids[Skill.?, " | "]

      var combined as string
      if (tagis[Skill.?] <> 0) then
        if (tagis[Specialty.?] <> 0) then
          combined = skills & " | " & specs
        else
          combined = skills
        endif
      else
        combined = specs
      endif

      ~ debug "combined: " & combined
      gizmo.childfound[SpecHelp].field[SpecExpr].text = "component.Specialty & (" & combined & ")"
      field[usrCandid2].text &= " & (" & combined & ")"
      ~ debug "Gizmo Text: " & gizmo.childfound[SpecHelp].field[SpecExpr].text
      ]]></eval>
      <child entity="entSpec"/>
    
  </thing>
        
  <thing
    id="fRPlusSk2"
    name="Multiple Skill Bonuses"
    compset="cmpsetSB"
    description="Gives a bonus to the selected skills.">
    <tag group="Hide" tag="Special"/>
    <eval index="1" phase="PreTraits" priority="2900">
      <before name="Calc trtFinal"/><![CDATA[
      var bonus as number
      var penalty as number
      bonus = tagvalue[Bonus.?]
      penalty = tagvalue[Penalty.?]
      if (bonus = 0) then
        if (penalty = 0) then
          bonus = 2
        endif
      endif
      
      field[usrCandid1].text = ""
      
      ~build the candidate expression out of our Skill and Skills tags
      var skills as string
      skills = tagids[Skill.?, " | "]
      var skilltypes as string
      skilltypes = tagids[Skills.?, " | "]

      var skillNames as string
      skillNames = tagnames[Skill.?, ", "]
      var skillTypes as string
      skillTypes = tagnames[Skills.?, ", "]
      
      if (empty(skillNames) = 0 ) then
        if (empty(skillTypes) = 0 ) then
          skillNames &= ", " & tagnames[Skills.?, ", "]
          endif
      else
        skillNames = skillTypes
        endif
      
      if (bonus > 0) then
        field[livename].text = "+" & bonus & " to " & skillNames
        
        foreach pick in hero from Skill where skills
          perform eachpick.field[trtBG].modify[+,bonus,"Background"]
        nexteach
      
        foreach pick in hero from Skill where skilltypes
          perform eachpick.field[trtBG].modify[+,bonus,"Background"]
        nexteach
      elseif (penalty > 0) then
        field[livename].text = "-" & penalty & " to " & skillNames
        
        foreach pick in hero from Skill where skills
          ~perform eachpick.field[sklRoll].modify[-,penalty,"Background"]
          nexteach
      
        foreach pick in hero from Skill where skilltypes
          ~perform eachpick.field[sklRoll].modify[-,penalty,"Background"]
          nexteach
      endif
      
      ]]></eval>
    </thing>  
        
  <!-- Character point resource to track the pool of character points being spent -->
  <thing
    id="resCP"
    name="Character Points"
    compset="Resource">

    <!-- Automatically add the resource to every actor -->
    <tag group="Helper" tag="Bootstrap"/>

    <!-- Use the starting skill points as our initial maximum -->
    <eval index="1" phase="Setup" priority="1000"><![CDATA[
      field[resMax].value = herofield[acStartSP].value
      ]]></eval>
    </thing>

  <!-- Advance resource to track the number of advances accrued/spent -->
  <thing
    id="resAdvance"
    name="Advances"
    compset="Resource"
    panellink="advances">
    <fieldval field="resObject" value="Advance"/>

    <!-- Automatically add the resource to every actor -->
    <tag group="Helper" tag="Bootstrap"/>

    </thing>


  <!-- Spec Helper -->
  <thing
    id="SpecHelp"
    name="Spec Helper"
    compset="SpecHelp"
    description="Description goes here">
    </thing>
    
  <!-- Types of characters you might want to build -->
  <thing
    id="typHero"
    name="Type: Hero (PC)"
    compset="CharType">
    </thing>
  <thing
    id="typNPC"
    name="Type: Non-Player Character"
    compset="CharType">
    </thing>


  <!-- NPC Info to display on the NPC info tab - the final "Additional
      Information" pick can be added multiple times and customised by the user. -->
  <thing
    id="npcDesc"
    name="Description"
    compset="NPCInfo"
    uniqueness="unique">
    <tag group="explicit" tag="5"/>
    </thing>
  <thing
    id="npcGoals"
    name="Motivations &amp; Goals"
    compset="NPCInfo"
    uniqueness="unique">
    <tag group="explicit" tag="10"/>
    </thing>
  <thing
    id="npcSchemes"
    name="Schemes, Plots &amp; Adventure Hooks"
    compset="NPCInfo"
    uniqueness="unique">
    <tag group="explicit" tag="15"/>
    </thing>
  <thing
    id="npcTacBef"
    name="Tactics - Before Combat"
    compset="NPCInfo"
    uniqueness="unique">
    <tag group="explicit" tag="20"/>
    </thing>
  <thing
    id="npcTacDur"
    name="Tactics - During Combat"
    compset="NPCInfo"
    uniqueness="unique">
    <tag group="explicit" tag="25"/>
    </thing>
  <thing
    id="npcMorale"
    name="Tactics - Morale"
    compset="NPCInfo"
    uniqueness="unique">
    <tag group="explicit" tag="30"/>
    </thing>
  <thing
    id="npcEnviron"
    name="Ecology - Environment"
    compset="NPCInfo"
    uniqueness="unique">
    <tag group="explicit" tag="35"/>
    </thing>
  <thing
    id="npcOrganiz"
    name="Ecology - Organization"
    compset="NPCInfo"
    uniqueness="unique">
    <tag group="explicit" tag="40"/>
    </thing>
  <thing
    id="npcTreas"
    name="Ecology - Treasure"
    compset="NPCInfo"
    uniqueness="unique">
    <tag group="explicit" tag="45"/>
    </thing>
  <thing
    id="npcOther"
    name="Additional Information"
    compset="NPCInfo">
    <tag group="Helper" tag="CustomItem"/>
    <tag group="explicit" tag="50"/>
    </thing>

    </document>
